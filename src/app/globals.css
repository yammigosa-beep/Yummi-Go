@import url('https://fonts.googleapis.com/css2?family=Cairo:wght@400;500;600;700;800&display=swap');

@tailwind base;
@tailwind components;
@tailwind utilities;

:root {
  /* Yummi Go Unified Color Palette */
  --color-primary-orange: #F57C00;
  --color-secondary-green: #43A047;
  --color-accent-warm: #fd9900;
  --color-hover-accent: #FFC107;
  
  --color-text-heading: #101113;
  --color-text-body: #53565c;
  --color-text-dark: #333333;
  
  --color-bg-white: #ffffff;
  --color-bg-off-white: #f8f8f8;
  --color-bg-warm-dark: #391512;
  --color-bg-light-gray: #EEF0EF;

  /* Custom filter for decorative icons */
  --icon-filter: brightness(0.5) sepia(1) hue-rotate(-10deg) saturate(4);
}

html, body {
  height: 100%;
  font-family: 'Cairo', sans-serif;
  font-size: 16px;
  line-height: 1.6;
  /* Prevent horizontal overflow (fix mobile white gap) */
  overflow-x: hidden;
  -webkit-overflow-scrolling: touch;
}

/* Also ensure Next.js root container doesn't cause horizontal scroll */
#__next, main {
  overflow-x: hidden;
  width: 100%;
}

body {
  background-color: var(--color-bg-white);
  color: var(--color-text-body);
}

/* Typography Classes */
.heading-primary {
  color: var(--color-text-heading);
  font-weight: 700;
}

.heading-secondary {
  color: var(--color-text-heading);
  font-weight: 600;
}

.text-primary {
  color: var(--color-text-body);
}

/* Button Styles */
.btn-primary {
  background-color: var(--color-primary-orange);
  color: var(--color-bg-white);
  transition: background-color 0.3s ease;
}

.btn-primary:hover {
  background-color: var(--color-hover-accent);
}

.btn-secondary {
  background-color: var(--color-secondary-green);
  color: var(--color-bg-white);
  transition: background-color 0.3s ease;
}

.btn-secondary:hover {
  background-color: #388E3C;
}

/* Background Variants */
.bg-warm-section {
  background-color: var(--color-bg-warm-dark);
  color: var(--color-bg-white);
}

.bg-off-white-section {
  background-color: var(--color-bg-off-white);
}

/* Decorative dark food pattern background used in Achievements */
.food-pattern {
  position: relative;
  /* use the provided image from public/ as the background, with orange as fallback */
  background-color: var(--color-primary-orange);
  background-image: url('/Achievements_BG.jpg');
  background-position: center;
  background-size: cover;
  background-repeat: no-repeat;
}
.food-pattern::before {
  content: "";
  position: absolute;
  inset: 0;
  background-image: radial-gradient(rgba(255,255,255,0.06) 1px, transparent 1px);
  background-size: 22px 22px;
  opacity: 0.18;
  z-index: 0;
  pointer-events: none;
}
.food-pattern::after {
  content: "";
  position: absolute;
  inset: 0;
  /* removed image overlay so background is a solid orange color */
  background: none;
  opacity: 0;
  z-index: 0;
  pointer-events: none;
}

/* Make sure direct children (content) render above the decorative layers */
.food-pattern > * {
  position: relative;
  z-index: 1;
}

/* Small helpers to use theme orange tokens */
.text-orange-primary {
  color: var(--color-primary-orange);
}
.text-orange-accent {
  color: var(--color-accent-warm);
}
.text-orange-hover {
  color: var(--color-hover-accent);
}

/* Decorative rounded corner accents for the thin frame */
.frame-rounded-corners {
  position: relative;
}
.frame-rounded-corners::before,
.frame-rounded-corners::after {
  content: "";
  position: absolute;
  left: 0;
  right: 0;
  height: 10px;
  pointer-events: none;
}
.frame-rounded-corners::before {
  top: -6px;
  border-top-left-radius: 12px;
  border-top-right-radius: 12px;
  box-shadow: 0 -4px 0 0 var(--color-bg-warm-dark) inset;
}
.frame-rounded-corners::after {
  bottom: -6px;
  border-bottom-left-radius: 12px;
  border-bottom-right-radius: 12px;
  box-shadow: 0 4px 0 0 var(--color-bg-warm-dark) inset;
}

/* Icon filter utility classes */
.icon-decorative-filter {
  filter: var(--icon-filter);
  mix-blend-mode: multiply;
}

/* Scrollbar utilities */
.scrollbar-hide {
  -ms-overflow-style: none;
  scrollbar-width: none;
}

.scrollbar-hide::-webkit-scrollbar {
  display: none;
}

/* Border utilities */
.border-3 {
  border-width: 3px;
}

/* Animation Classes - Legacy support for components that might reference these directly */
.animate-float {
  animation: float 6s ease-in-out infinite;
}

.animate-spin-slow {
  animation: spinSlow 20s linear infinite;
}

.animate-pulse-slow {
  animation: pulseSlow 4s ease-in-out infinite;
}

.animate-fade-in {
  animation: fadeIn 1s ease-out forwards;
}

.animate-fade-in-delayed {
  animation: fadeInDelayed 1.2s ease-out forwards;
}

.animate-slow-rotate {
  animation: slowRotate 12s ease-in-out infinite;
  transform-origin: center;
}

.animate-about-float {
  animation: aboutFloat 6s ease-in-out infinite;
  transform-origin: center;
}

/* Keyframe definitions for legacy support */
@keyframes fadeIn {
  from {
    opacity: 0;
    transform: translateY(30px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes fadeInDelayed {
  from {
    opacity: 0;
    transform: translateX(30px);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes float {
  0%, 100% {
    transform: translateY(0px);
  }
  50% {
    transform: translateY(-10px);
  }
}

@keyframes spinSlow {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

@keyframes slowRotate {
  from { transform: rotate(-6deg) scale(1); }
  50% { transform: rotate(6deg) scale(1.01); }
  to { transform: rotate(-6deg) scale(1); }
}

@keyframes pulseSlow {
  0%, 100% {
    opacity: 0.15;
    transform: scale(1);
  }
  50% {
    opacity: 0.25;
    transform: scale(1.05);
  }
}

@keyframes aboutFloat {
  0% { transform: translateY(0) rotate(-2deg); }
  50% { transform: translateY(-14px) rotate(2deg); }
  100% { transform: translateY(0) rotate(-2deg); }
}
